/*! grafana - v2.1.3 - 2015-08-24
 * Copyright (c) 2015 Torkel Ã–degaard; Licensed Apache License */

define(["helpers","plugins/datasource/influxdb/queryCtrl"],function(a){"use strict";describe("InfluxDBQueryCtrl",function(){var b=new a.ControllerTestContext;beforeEach(module("grafana.controllers")),beforeEach(b.providePhase()),beforeEach(b.createControllerPhase("InfluxQueryCtrl")),beforeEach(function(){b.scope.target={},b.scope.$parent={get_data:sinon.spy()},b.scope.datasource=b.datasource,b.scope.datasource.metricFindQuery=sinon.stub().returns(b.$q.when([]))}),describe("init",function(){beforeEach(function(){b.scope.init()}),it("should init tagSegments",function(){expect(b.scope.tagSegments.length).to.be(1)}),it("should init measurementSegment",function(){expect(b.scope.measurementSegment.value).to.be("select measurement")})}),describe("when first tag segment is updated",function(){beforeEach(function(){b.scope.init(),b.scope.tagSegmentUpdated({value:"asd",type:"plus-button"},0)}),it("should update tag key",function(){expect(b.scope.target.tags[0].key).to.be("asd"),expect(b.scope.tagSegments[0].type).to.be("key")}),it("should add tagSegments",function(){expect(b.scope.tagSegments.length).to.be(3)})}),describe("when last tag value segment is updated",function(){beforeEach(function(){b.scope.init(),b.scope.tagSegmentUpdated({value:"asd",type:"plus-button"},0),b.scope.tagSegmentUpdated({value:"server1",type:"value"},2)}),it("should update tag value",function(){expect(b.scope.target.tags[0].value).to.be("server1")}),it("should set tag operator",function(){expect(b.scope.target.tags[0].operator).to.be("=")}),it("should add plus button for another filter",function(){expect(b.scope.tagSegments[3].fake).to.be(!0)})}),describe("when last tag value segment is updated to regex",function(){beforeEach(function(){b.scope.init(),b.scope.tagSegmentUpdated({value:"asd",type:"plus-button"},0),b.scope.tagSegmentUpdated({value:"/server.*/",type:"value"},2)}),it("should update operator",function(){expect(b.scope.tagSegments[1].value).to.be("=~"),expect(b.scope.target.tags[0].operator).to.be("=~")})}),describe("when second tag key is added",function(){beforeEach(function(){b.scope.init(),b.scope.tagSegmentUpdated({value:"asd",type:"plus-button"},0),b.scope.tagSegmentUpdated({value:"server1",type:"value"},2),b.scope.tagSegmentUpdated({value:"key2",type:"plus-button"},3)}),it("should update tag key",function(){expect(b.scope.target.tags[1].key).to.be("key2")}),it("should add AND segment",function(){expect(b.scope.tagSegments[3].value).to.be("AND")})}),describe("when condition is changed",function(){beforeEach(function(){b.scope.init(),b.scope.tagSegmentUpdated({value:"asd",type:"plus-button"},0),b.scope.tagSegmentUpdated({value:"server1",type:"value"},2),b.scope.tagSegmentUpdated({value:"key2",type:"plus-button"},3),b.scope.tagSegmentUpdated({value:"OR",type:"condition"},3)}),it("should update tag condition",function(){expect(b.scope.target.tags[1].condition).to.be("OR")}),it("should update AND segment",function(){expect(b.scope.tagSegments[3].value).to.be("OR"),expect(b.scope.tagSegments.length).to.be(7)})}),describe("when deleting first tag filter after value is selected",function(){beforeEach(function(){b.scope.init(),b.scope.tagSegmentUpdated({value:"asd",type:"plus-button"},0),b.scope.tagSegmentUpdated({value:"server1",type:"value"},2),b.scope.tagSegmentUpdated(b.scope.removeTagFilterSegment,0)}),it("should remove tags",function(){expect(b.scope.target.tags.length).to.be(0)}),it("should remove all segment after 2 and replace with plus button",function(){expect(b.scope.tagSegments.length).to.be(1),expect(b.scope.tagSegments[0].type).to.be("plus-button")})}),describe("when deleting second tag value before second tag value is complete",function(){beforeEach(function(){b.scope.init(),b.scope.tagSegmentUpdated({value:"asd",type:"plus-button"},0),b.scope.tagSegmentUpdated({value:"server1",type:"value"},2),b.scope.tagSegmentUpdated({value:"key2",type:"plus-button"},3),b.scope.tagSegmentUpdated(b.scope.removeTagFilterSegment,4)}),it("should remove all segment after 2 and replace with plus button",function(){expect(b.scope.tagSegments.length).to.be(4),expect(b.scope.tagSegments[3].type).to.be("plus-button")})}),describe("when deleting second tag value before second tag value is complete",function(){beforeEach(function(){b.scope.init(),b.scope.tagSegmentUpdated({value:"asd",type:"plus-button"},0),b.scope.tagSegmentUpdated({value:"server1",type:"value"},2),b.scope.tagSegmentUpdated({value:"key2",type:"plus-button"},3),b.scope.tagSegmentUpdated(b.scope.removeTagFilterSegment,4)}),it("should remove all segment after 2 and replace with plus button",function(){expect(b.scope.tagSegments.length).to.be(4),expect(b.scope.tagSegments[3].type).to.be("plus-button")})}),describe("when deleting second tag value after second tag filter is complete",function(){beforeEach(function(){b.scope.init(),b.scope.tagSegmentUpdated({value:"asd",type:"plus-button"},0),b.scope.tagSegmentUpdated({value:"server1",type:"value"},2),b.scope.tagSegmentUpdated({value:"key2",type:"plus-button"},3),b.scope.tagSegmentUpdated({value:"value",type:"value"},6),b.scope.tagSegmentUpdated(b.scope.removeTagFilterSegment,4)}),it("should remove all segment after 2 and replace with plus button",function(){expect(b.scope.tagSegments.length).to.be(4),expect(b.scope.tagSegments[3].type).to.be("plus-button")})}),describe("when adding group by",function(){beforeEach(function(){b.scope.init(),b.scope.groupByTagUpdated({value:"host",type:"plus-button"},0)}),it("should add group by",function(){expect(b.scope.target.groupByTags.length).to.be(1),expect(b.scope.target.groupByTags[0]).to.be("host")}),it("should add another plus button segment",function(){expect(b.scope.groupBySegments[1].type).to.be("plus-button")})}),describe("when removing group by",function(){beforeEach(function(){b.scope.init(),b.scope.groupByTagUpdated({value:"host",type:"plus-button"},0),b.scope.groupByTagUpdated(b.scope.removeGroupBySegment,0)}),it("should add group by",function(){expect(b.scope.target.groupByTags.length).to.be(0)}),it("should remove segment",function(){expect(b.scope.groupBySegments.length).to.be(1),expect(b.scope.groupBySegments[0].type).to.be("plus-button")})})})});