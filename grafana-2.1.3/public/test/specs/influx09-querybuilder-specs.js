/*! grafana - v2.1.3 - 2015-08-24
 * Copyright (c) 2015 Torkel Ã–degaard; Licensed Apache License */

define(["plugins/datasource/influxdb/queryBuilder"],function(a){"use strict";describe("InfluxQueryBuilder",function(){describe("series with mesurement only",function(){var b=new a({measurement:"cpu"}),c=b.build();it("should generate correct query",function(){expect(c).to.be('SELECT mean(value) FROM "cpu" WHERE $timeFilter GROUP BY time($interval)')})}),describe("series with single tag only",function(){var b=new a({measurement:"cpu",tags:[{key:"hostname",value:"server1"}]}),c=b.build();it("should generate correct query",function(){expect(c).to.be('SELECT mean(value) FROM "cpu" WHERE "hostname" = \'server1\' AND $timeFilter GROUP BY time($interval)')}),it("should switch regex operator with tag value is regex",function(){var b=new a({measurement:"cpu",tags:[{key:"app",value:"/e.*/"}]}),c=b.build();expect(c).to.be('SELECT mean(value) FROM "cpu" WHERE "app" =~ /e.*/ AND $timeFilter GROUP BY time($interval)')})}),describe("series with multiple fields",function(){var b=new a({measurement:"cpu",tags:[],fields:[{name:"tx_in",func:"sum"},{name:"tx_out",func:"mean"}]}),c=b.build();it("should generate correct query",function(){expect(c).to.be('SELECT sum(tx_in), mean(tx_out) FROM "cpu" WHERE $timeFilter GROUP BY time($interval)')})}),describe("series with multiple tags only",function(){var b=new a({measurement:"cpu",tags:[{key:"hostname",value:"server1"},{key:"app",value:"email",condition:"AND"}]}),c=b.build();it("should generate correct query",function(){expect(c).to.be('SELECT mean(value) FROM "cpu" WHERE "hostname" = \'server1\' AND "app" = \'email\' AND $timeFilter GROUP BY time($interval)')})}),describe("series with tags OR condition",function(){var b=new a({measurement:"cpu",tags:[{key:"hostname",value:"server1"},{key:"hostname",value:"server2",condition:"OR"}]}),c=b.build();it("should generate correct query",function(){expect(c).to.be('SELECT mean(value) FROM "cpu" WHERE "hostname" = \'server1\' OR "hostname" = \'server2\' AND $timeFilter GROUP BY time($interval)')})}),describe("series with groupByTag",function(){it("should generate correct query",function(){var b=new a({measurement:"cpu",tags:[],groupByTags:["host"]}),c=b.build();expect(c).to.be('SELECT mean(value) FROM "cpu" WHERE $timeFilter GROUP BY time($interval), "host"')})}),describe("when building explore queries",function(){it("should only have measurement condition in tag keys query given query with measurement",function(){var b=new a({measurement:"cpu",tags:[]}),c=b.buildExploreQuery("TAG_KEYS");expect(c).to.be('SHOW TAG KEYS FROM "cpu"')}),it("should handle regex measurement in tag keys query",function(){var b=new a({measurement:"/.*/",tags:[]}),c=b.buildExploreQuery("TAG_KEYS");expect(c).to.be("SHOW TAG KEYS FROM /.*/")}),it("should have no conditions in tags keys query given query with no measurement or tag",function(){var b=new a({measurement:"",tags:[]}),c=b.buildExploreQuery("TAG_KEYS");expect(c).to.be("SHOW TAG KEYS")}),it("should have where condition in tag keys query with tags",function(){var b=new a({measurement:"",tags:[{key:"host",value:"se1"}]}),c=b.buildExploreQuery("TAG_KEYS");expect(c).to.be("SHOW TAG KEYS WHERE \"host\" = 'se1'")}),it("should have no conditions in measurement query for query with no tags",function(){var b=new a({measurement:"",tags:[]}),c=b.buildExploreQuery("MEASUREMENTS");expect(c).to.be("SHOW MEASUREMENTS")}),it("should have where condition in measurement query for query with tags",function(){var b=new a({measurement:"",tags:[{key:"app",value:"email"}]}),c=b.buildExploreQuery("MEASUREMENTS");expect(c).to.be("SHOW MEASUREMENTS WHERE \"app\" = 'email'")}),it("should have where tag name IN filter in tag values query for query with one tag",function(){var b=new a({measurement:"",tags:[{key:"app",value:"asdsadsad"}]}),c=b.buildExploreQuery("TAG_VALUES","app");expect(c).to.be('SHOW TAG VALUES WITH KEY = "app"')}),it("should have measurement tag condition and tag name IN filter in tag values query",function(){var b=new a({measurement:"cpu",tags:[{key:"app",value:"email"},{key:"host",value:"server1"}]}),c=b.buildExploreQuery("TAG_VALUES","app");expect(c).to.be('SHOW TAG VALUES FROM "cpu" WITH KEY = "app" WHERE "host" = \'server1\'')}),it("should switch to regex operator in tag condition",function(){var b=new a({measurement:"cpu",tags:[{key:"host",value:"/server.*/"}]}),c=b.buildExploreQuery("TAG_VALUES","app");expect(c).to.be('SHOW TAG VALUES FROM "cpu" WITH KEY = "app" WHERE "host" =~ /server.*/')}),it("should build show field query",function(){var b=new a({measurement:"cpu",tags:[{key:"app",value:"email"}]}),c=b.buildExploreQuery("FIELDS");expect(c).to.be('SHOW FIELD KEYS FROM "cpu"')})})})});