/*! grafana - v2.1.3 - 2015-08-24
 * Copyright (c) 2015 Torkel Ã–degaard; Licensed Apache License */

define(["plugins/datasource/influxdb/influxSeries"],function(a){"use strict";describe("when generating timeseries from influxdb response",function(){describe("given multiple fields for series",function(){var b={series:[{name:"cpu",tags:{app:"test",server:"server1"},columns:["time","mean","max","min"],values:[[1431946625e3,10,11,9],[1431946626e3,20,21,19]]}]};describe("and no alias",function(){it("should generate multiple datapoints for each column",function(){var c=new a(b),d=c.getTimeSeries();expect(d.length).to.be(3),expect(d[0].target).to.be("cpu.mean {app: test, server: server1}"),expect(d[0].datapoints[0][0]).to.be(10),expect(d[0].datapoints[0][1]).to.be(1431946625e3),expect(d[0].datapoints[1][0]).to.be(20),expect(d[0].datapoints[1][1]).to.be(1431946626e3),expect(d[1].target).to.be("cpu.max {app: test, server: server1}"),expect(d[1].datapoints[0][0]).to.be(11),expect(d[1].datapoints[0][1]).to.be(1431946625e3),expect(d[1].datapoints[1][0]).to.be(21),expect(d[1].datapoints[1][1]).to.be(1431946626e3),expect(d[2].target).to.be("cpu.min {app: test, server: server1}"),expect(d[2].datapoints[0][0]).to.be(9),expect(d[2].datapoints[0][1]).to.be(1431946625e3),expect(d[2].datapoints[1][0]).to.be(19),expect(d[2].datapoints[1][1]).to.be(1431946626e3)})}),describe("and simple alias",function(){it("should use alias",function(){b.alias="new series";var c=new a(b),d=c.getTimeSeries();expect(d[0].target).to.be("new series"),expect(d[1].target).to.be("new series"),expect(d[2].target).to.be("new series")})}),describe("and alias patterns",function(){it("should replace patterns",function(){b.alias="alias: $m -> $tag_server ([[measurement]])";var c=new a(b),d=c.getTimeSeries();expect(d[0].target).to.be("alias: cpu -> server1 (cpu)"),expect(d[1].target).to.be("alias: cpu -> server1 (cpu)"),expect(d[2].target).to.be("alias: cpu -> server1 (cpu)")})})}),describe("given measurement with default fieldname",function(){var b={series:[{name:"cpu",tags:{app:"test",server:"server1"},columns:["time","value"],values:[["2015-05-18T10:57:05Z",10],["2015-05-18T10:57:06Z",12]]},{name:"cpu",tags:{app:"test2",server:"server2"},columns:["time","value"],values:[["2015-05-18T10:57:05Z",15],["2015-05-18T10:57:06Z",16]]}]};describe("and no alias",function(){it("should generate label with no field",function(){var c=new a(b),d=c.getTimeSeries();expect(d[0].target).to.be("cpu {app: test, server: server1}"),expect(d[1].target).to.be("cpu {app: test2, server: server2}")})})}),describe("given two series",function(){var b={series:[{name:"cpu",tags:{app:"test",server:"server1"},columns:["time","mean"],values:[[1431946625e3,10],[1431946626e3,12]]},{name:"cpu",tags:{app:"test2",server:"server2"},columns:["time","mean"],values:[[1431946625e3,15],[1431946626e3,16]]}]};describe("and no alias",function(){it("should generate two time series",function(){var c=new a(b),d=c.getTimeSeries();expect(d.length).to.be(2),expect(d[0].target).to.be("cpu.mean {app: test, server: server1}"),expect(d[0].datapoints[0][0]).to.be(10),expect(d[0].datapoints[0][1]).to.be(1431946625e3),expect(d[0].datapoints[1][0]).to.be(12),expect(d[0].datapoints[1][1]).to.be(1431946626e3),expect(d[1].target).to.be("cpu.mean {app: test2, server: server2}"),expect(d[1].datapoints[0][0]).to.be(15),expect(d[1].datapoints[0][1]).to.be(1431946625e3),expect(d[1].datapoints[1][0]).to.be(16),expect(d[1].datapoints[1][1]).to.be(1431946626e3)})}),describe("and simple alias",function(){it("should use alias",function(){b.alias="new series";var c=new a(b),d=c.getTimeSeries();expect(d[0].target).to.be("new series")})}),describe("and alias patterns",function(){it("should replace patterns",function(){b.alias="alias: $m -> $tag_server ([[measurement]])";var c=new a(b),d=c.getTimeSeries();expect(d[0].target).to.be("alias: cpu -> server1 (cpu)"),expect(d[1].target).to.be("alias: cpu -> server2 (cpu)")})})})})});