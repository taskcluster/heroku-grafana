/*! grafana - v2.1.3 - 2015-08-24
 * Copyright (c) 2015 Torkel Ã–degaard; Licensed Apache License */

define(["helpers","plugins/datasource/graphite/datasource"],function(a){"use strict";describe("graphiteDatasource",function(){var b=new a.ServiceTestContext;beforeEach(module("grafana.services")),beforeEach(b.providePhase(["backendSrv"])),beforeEach(b.createService("GraphiteDatasource")),beforeEach(function(){b.ds=new b.service({url:[""]})}),describe("When querying influxdb with one target using query editor target spec",function(){var a,c,d={range:{from:"now-1h",to:"now"},targets:[{target:"prod1.count"},{target:"prod2.count"}],maxDataPoints:500};beforeEach(function(){b.backendSrv.datasourceRequest=function(a){return c=a,b.$q.when({data:[{target:"prod1.count",datapoints:[[10,1],[12,1]]}]})},b.ds.query(d).then(function(b){a=b}),b.$rootScope.$apply()}),it("should generate the correct query",function(){expect(c.url).to.be("/render")}),it("should query correctly",function(){var a=c.data.split("&");expect(a).to.contain("target=prod1.count"),expect(a).to.contain("target=prod2.count"),expect(a).to.contain("from=-1h"),expect(a).to.contain("until=now")}),it("should exclude undefined params",function(){var a=c.data.split("&");expect(a).to.not.contain("cacheTimeout=undefined")}),it("should return series list",function(){expect(a.data.length).to.be(1),expect(a.data[0].target).to.be("prod1.count")}),it("should convert to millisecond resolution",function(){expect(a.data[0].datapoints[0][0]).to.be(10)})}),describe("building graphite params",function(){it("should uri escape targets",function(){var a=b.ds.buildGraphiteParams({targets:[{target:"prod1.{test,test2}"},{target:"prod2.count"}]});expect(a).to.contain("target=prod1.%7Btest%2Ctest2%7D")}),it("should replace target placeholder",function(){var a=b.ds.buildGraphiteParams({targets:[{target:"series1"},{target:"series2"},{target:"asPercent(#A,#B)"}]});expect(a[2]).to.be("target=asPercent(series1%2Cseries2)")}),it("should replace target placeholder for hidden series",function(){var a=b.ds.buildGraphiteParams({targets:[{target:"series1",hide:!0},{target:"sumSeries(#A)",hide:!0},{target:"asPercent(#A,#B)"}]});expect(a[0]).to.be("target="+encodeURIComponent("asPercent(series1,sumSeries(series1))"))}),it("should replace target placeholder when nesting query references",function(){var a=b.ds.buildGraphiteParams({targets:[{target:"series1"},{target:"sumSeries(#A)"},{target:"asPercent(#A,#B)"}]});expect(a[2]).to.be("target="+encodeURIComponent("asPercent(series1,sumSeries(series1))"))}),it("should fix wrong minute interval parameters",function(){var a=b.ds.buildGraphiteParams({targets:[{target:"summarize(prod.25m.count, '25m', 'sum')"}]});expect(a[0]).to.be("target="+encodeURIComponent("summarize(prod.25m.count, '25min', 'sum')"))}),it("should fix wrong month interval parameters",function(){var a=b.ds.buildGraphiteParams({targets:[{target:"summarize(prod.5M.count, '5M', 'sum')"}]});expect(a[0]).to.be("target="+encodeURIComponent("summarize(prod.5M.count, '5mon', 'sum')"))}),it("should ignore empty targets",function(){var a=b.ds.buildGraphiteParams({targets:[{target:"series1"},{target:""}]});expect(a.length).to.be(2)})})})});